{"version":3,"sources":["../src/query_builder.js"],"names":[],"mappings":"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","file":"query_builder.js","sourcesContent":["import _ from 'lodash';\n\nexport default class MQEQuery {\n\n  /** @ngInject */\n  constructor(target, templateSrv, scopedVars) {\n    this.target = target;\n    this.templateSrv = templateSrv;\n    this.scopedVars = scopedVars;\n  }\n\n  /////////////////////\n  // Query Rendering //\n  /////////////////////\n\n  render(metricList, timeFrom, timeTo, interval) {\n    let target = this.target;\n    let metric = this.target.metric;\n    let metrics = [];\n    if (containsWildcard(metric)) {\n      metrics = filterMetrics(metric, metricList);\n    } else {\n      metrics = [metric];\n    }\n    return _.map(metrics, metric => {\n      let query = \"\";\n      query += metric;\n\n      // Render apps and hosts\n      if (target.apps.length || target.hosts.length) {\n        query += \" where \";\n        if (target.apps.length) {\n          query += \"app in (\" + _.map(target.apps, app => {\n            return \"'\" + app + \"'\";\n          }).join(', ') + \")\";\n          if (target.hosts.length)  {\n            query += \" and \";\n          }\n        }\n        if (target.hosts.length) {\n          query += \"host in (\" + _.map(target.hosts, host => {\n            return \"'\" + host + \"'\";\n          }).join(', ') + \")\";\n        }\n      }\n\n      query = MQEQuery.addTimeRange(query, timeFrom, timeTo);\n      return query;\n    });\n  }\n\n  renderWhereClauses(whereClauses) {\n    var renderedClauses = _.map(whereClauses, (clauseObj, index) => {\n      var rendered = \"\";\n      if (index !== 0) {\n        rendered += clauseObj.condition + \" \";\n      }\n\n      // Put non-numeric values into quotes.\n      var value;\n      if (_.isNumber(clauseObj.value) ||\n          this.containsVariable(clauseObj.value)) {\n        value = clauseObj.value;\n      } else {\n        value = \"'\" + clauseObj.value + \"'\";\n      }\n      rendered += clauseObj.column + ' ' + clauseObj.operator + ' ' + value;\n      return rendered;\n    });\n    return renderedClauses.join(' ');\n  }\n\n  // Check for template variables\n  containsVariable(str) {\n    var variables = _.map(this.templateSrv.variables, 'name');\n    var self = this;\n    return _.some(variables, variable => {\n      return self.templateSrv.containsVariable(str, variable);\n    });\n  }\n\n  ////////////////////\n  // Static methods //\n  ////////////////////\n\n  static getMetrics() {\n    var query = \"describe all\";\n    return query;\n  }\n\n  static getColumns(metric) {\n    return \"describe \" + metric;\n  }\n\n  static addTimeRange(query, timeFrom, timeTo, interval) {\n    var timeRangeRegex = /from.*to/;\n    if(!timeRangeRegex.test(query)) {\n      query = trim(query) + \" from \" + timeFrom + \" to \" + timeTo;\n    }\n    return query;\n  }\n}\n\nfunction containsWildcard(str) {\n  var wildcardRegex = /\\*/;\n  return wildcardRegex.test(str);\n}\n\nfunction filterMetrics(str, metrics) {\n  var filterRegex = new RegExp(str.replace('*', '.*'), 'g');\n  return _.filter(metrics, metric => {\n    return filterRegex.test(metric);\n  });\n}\n\nfunction trim(str) {\n  var trimRegex = /^[\\s]*(.*?)[\\s]*$/;\n  var match = str.match(trimRegex);\n  return match ? match[0] : match;\n}\n"]}